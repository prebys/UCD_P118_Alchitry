// This is a wrapper around a file created by the XADC wizard to simplify the continuous readout of XADC channels.
//
// This is written around a stub generated by the Vivado IP Catalog XADC Wizard with the following parameters
//   Single Channel
//   DRB Interface
//   Event driven
//   No reset
//   256 sample averaging
//   VP-VN input
//
//
module xadc_wrapper (
    input clk,            // clock
    input convst,         // Start convert
    input vp_in,          // Dedicated analog input (+)
    input vn_in,          // Dedicated analog input (-)
    output busy,          // Busy during conversion
    output  [11:0] XADC_value);   // XADC readout (MSB 12 bits of 16 bit dataword)

    // Tie this to the ADC code created by the wizard

    wire [15:0] XADC_out; 
    assign XADC_value=XADC_out[15:4];   // Only 12 MSBs significant       
    
    wire eoc;

    xadc_wiz_0 xadc_wiz_0
          (.convst_in(convst),  // Event driven
          .daddr_in(3),            // dedicated analog inputs
          .dclk_in(clk),           // Clock input for the dynamic reconfiguration port
          .den_in(eoc),              // Data enable. Tying this to eoc is the magic bullet!!
          .di_in(0),
          .dwe_in(0),              // Write enable
          .busy_out(busy),             // ADC Busy signal
          .channel_out(),          // Channel Selection Outputs
          .do_out(XADC_out),       // Data out
          .drdy_out(),             // Data ready
          .eoc_out(eoc),           // End of Conversion Signal
          .eos_out(),              // End of Sequence Signal
          .alarm_out(),            // OR'ed output of all the Alarms    
          .vp_in(vp_in),           // Dedicated Analog Input Pair
          .vn_in(vn_in));   
  
  
  
endmodule
